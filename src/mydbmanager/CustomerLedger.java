/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mydbmanager;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Mitrajit
 */
public class CustomerLedger extends javax.swing.JFrame {

    /**
     * Creates new form CustomerLedger
     */
    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    ArrayList <Double> cp=new ArrayList <>();
    public CustomerLedger() {
        initComponents();
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            conn=DriverManager.getConnection("jdbc:ucanaccess://E:\\Data entry_Project\\Mydb.accdb");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Problem with connection");
        }
    }
    ArrayList<JFrame> frames;
    public CustomerLedger(Connection con,ArrayList<JFrame> frm)
    {
        initComponents();
        conn=con;
        frames=frm;
    }
    private String Format(double a){
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(2);
        nf.setMinimumFractionDigits(2);
        nf.setGroupingUsed(false);
        return nf.format(a);
    }
      private String Format(int a){
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMinimumIntegerDigits(4);
        nf.setGroupingUsed(false);
        return nf.format(a);
    }
    private void filltable()
    {
        try {
            String sql="SELECT * FROM CustomerProfile";
            rs=conn.prepareStatement(sql).executeQuery();
            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
            tm.setRowCount(0);
            while(rs.next())
            {
                tm.addRow(new Object[]{rs.getInt("ID"),rs.getString("Customer_name"),rs.getString("Address"),Format(rs.getDouble("Sale_amount")),
                    Format(rs.getDouble("Paid")),Format(rs.getDouble("Due"))});
            }
            for(int i=0;i<jTable1.getRowCount();i++){
            sql="SELECT * FROM Sell WHERE Customer_name='"+jTable1.getValueAt(i, 1)+"'";
            rs=conn.prepareStatement(sql).executeQuery();
            double total=0d;
            while(rs.next())
                total+=rs.getDouble("Cost_price");
            sql="SELECT * FROM Return WHERE Customer_name='"+jTable1.getValueAt(i, 1)+"'";
            rs=conn.prepareStatement(sql).executeQuery();
            while(rs.next())
                total-=rs.getDouble("Cost_price");
            cp.add(total); }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    private void chart(double sold,double cp,double paid){
        DefaultCategoryDataset dcs=new DefaultCategoryDataset();
        dcs.setValue(sold, "Rupees", "Sold");
        dcs.setValue(cp, "Rupees", "Cost price");
        dcs.setValue(paid, "Rupees", "Paid");
        JFreeChart barchart= ChartFactory.createBarChart("Report", "", "Amount", dcs, PlotOrientation.VERTICAL, false, true, false);
        barchart.setBackgroundPaint(new Color(255,255,255,0));
        CategoryPlot bchart= barchart.getCategoryPlot();
        bchart.setRangeGridlinePaint(Color.orange);
        ((BarRenderer)bchart.getRenderer()).setBarPainter(new StandardBarPainter());
        BarRenderer r = (BarRenderer)barchart.getCategoryPlot().getRenderer();
        r.setSeriesPaint(0, new Color(56,79,142,255));
        ChartPanel barchartpanel= new ChartPanel(barchart);
        chartpanel.removeAll();
        chartpanel.add(barchartpanel,BorderLayout.CENTER);
        chartpanel.validate();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        idlabel1 = new javax.swing.JLabel();
        amountsoldlabel1 = new javax.swing.JLabel();
        amtsold1 = new javax.swing.JLabel();
        amountpaidlabel1 = new javax.swing.JLabel();
        amtpaid1 = new javax.swing.JLabel();
        amountduelabel1 = new javax.swing.JLabel();
        amtdue1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ctc = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ppercent = new javax.swing.JLabel();
        chartpanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Ledger");
        setIconImage(ScaleImage.scale("Billosoft.png", 96, 96).getImage());
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customer name", "Address", "Sale amaount", "Paid amount", "Due"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        idlabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idlabel1.setText(" ");

        amountsoldlabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amountsoldlabel1.setText("Amount sold");

        amtsold1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amtsold1.setText(" ");

        amountpaidlabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amountpaidlabel1.setText("Amount paid");

        amtpaid1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amtpaid1.setText(" ");

        amountduelabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amountduelabel1.setText("Due");

        amtdue1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amtdue1.setText(" ");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cost to customer");

        ctc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ctc.setText(" ");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Profit Percent");

        ppercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ppercent.setText(" ");

        chartpanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amountpaidlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amtsold1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountsoldlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amtdue1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amtpaid1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountduelabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctc, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ppercent, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(chartpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(idlabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(amountsoldlabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amtsold1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(amountpaidlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amtpaid1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(amountduelabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amtdue1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ctc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ppercent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(chartpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        filltable();
        if(frames.remove(this))
            frames.add(this);
        else
            frames.add(this);
    }//GEN-LAST:event_formWindowGainedFocus

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    int sel=jTable1.getSelectedRow();
                    idlabel1.setText(Format((int)jTable1.getValueAt(sel, 0)));
                    amtsold1.setText(Format(Double.parseDouble(jTable1.getValueAt(sel, 3).toString())));
                    amtpaid1.setText(Format(Double.parseDouble(jTable1.getValueAt(sel, 4).toString())));
                    amtdue1.setText(Format(Double.parseDouble(jTable1.getValueAt(sel, 5).toString())));
                    ctc.setText(Format(cp.get(sel)));
                    double pp=(Double.parseDouble(jTable1.getValueAt(sel, 3).toString())-cp.get(sel))*100/cp.get(sel);
                    ppercent.setText(Format(pp)+"%");
                    pst=conn.prepareStatement("SELECT * FROM CustomerProfile WHERE Customer_name='"+jTable1.getValueAt(sel, 1)+"'");
                    rs=pst.executeQuery();
                    if(rs.next())
                    {if(rs.getDouble("Due")>rs.getDouble("Credit_limit")&&rs.getDouble("Credit_limit")!=-1)
                        amtdue1.setForeground(Color.red);
                    else
                        amtdue1.setForeground(Color.black);}
                    if(pp<0)
                        ppercent.setForeground(Color.red);
                    else
                        ppercent.setForeground(Color.black);
                    chart(Double.parseDouble(jTable1.getValueAt(sel, 3).toString()),cp.get(sel),Double.parseDouble(jTable1.getValueAt(sel, 4).toString()));
                } catch (SQLException ex) {
                    Logger.getLogger(CustomerLedger.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerLedger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountduelabel1;
    private javax.swing.JLabel amountpaidlabel1;
    private javax.swing.JLabel amountsoldlabel1;
    private javax.swing.JLabel amtdue1;
    private javax.swing.JLabel amtpaid1;
    private javax.swing.JLabel amtsold1;
    private javax.swing.JPanel chartpanel;
    private javax.swing.JLabel ctc;
    private javax.swing.JLabel idlabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel ppercent;
    // End of variables declaration//GEN-END:variables
}
