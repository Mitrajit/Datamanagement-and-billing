/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mydbmanager;

import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mitrajit
 */
public class InputOutput extends javax.swing.JFrame {

    /**
     * Creates new form InputOutput
     */
    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    Date dt=new Date();
    public InputOutput() {
        initComponents();
        try{
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            conn=DriverManager.getConnection("jdbc:ucanaccess://E:\\Data entry_Project\\Mydb.accdb");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Problem in connection");
        }
        
    }
    ArrayList<JFrame> frames=null;
    public InputOutput(Connection con,ArrayList<JFrame> frm) {
        initComponents();
        conn=con;
        frames=frm;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rawcontents = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        fromdate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        todate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        inouttable = new javax.swing.JTable();
        showwhat = new javax.swing.JComboBox<>();
        search = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        rawcontents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Date", "Description", "Total"
            }
        ));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Input/Output");
        setIconImage(ScaleImage.scale("Billosoft.png", 16, 16).getImage());
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        fromdate.setDate(dt);
        fromdate.setDateFormatString("dd-MMM-yyyy");
        fromdate.setEnabled(false);
        ((JTextFieldDateEditor)fromdate.getDateEditor()).setEditable(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("to");

        todate.setDate(dt);
        todate.setDateFormatString("dd-MMM-yyyy");
        todate.setDoubleBuffered(false);
        todate.setEnabled(false);
        ((JTextFieldDateEditor)todate.getDateEditor()).setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Total:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("0.00");

        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        inouttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Date", "Description", "Total"
            }
        ));
        inouttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inouttableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(inouttable);
        if (inouttable.getColumnModel().getColumnCount() > 0) {
            inouttable.getColumnModel().getColumn(0).setPreferredWidth(10);
            inouttable.getColumnModel().getColumn(1).setPreferredWidth(10);
            inouttable.getColumnModel().getColumn(2).setPreferredWidth(230);
            inouttable.getColumnModel().getColumn(3).setPreferredWidth(15);
        }

        showwhat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Input", "Output" }));

        search.setToolTipText("Search from description");
        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Today");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Yesterday");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Custom");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Here Input stands for payments and Output stands for the purchase. Input and output reffers to the in and out flow of money.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromdate, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todate, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(showwhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addComponent(search))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(showwhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(todate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3))
                        .addGap(3, 3, 3)))
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(7, 7, 7)
                .addComponent(jLabel1))
        );

        setSize(new java.awt.Dimension(790, 530));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public String Format(double a){
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(2);
        nf.setMinimumFractionDigits(2);
        nf.setGroupingUsed(false);
        return nf.format(a);
    }
    private void summation()
    {
        double total=0.0;
        int rowcount=inouttable.getSelectedRowCount();
        //System.out.println(rowcount);
        if(rowcount==0){
            rowcount=inouttable.getRowCount();
            for(int i=0;i<rowcount;i++)
            total+=Double.parseDouble(inouttable.getValueAt(i, 3).toString());
        }
        else
        { int rowind[]=inouttable.getSelectedRows();
            for(int i=0;i<rowcount;i++)
            {//System.out.println(rowind[i]);    
             total+=Double.parseDouble(inouttable.getValueAt(rowind[i], 3).toString());}
        }
        jLabel4.setText(Format(total));   
    }
    private void searchandfillup()
    {
        DefaultTableModel tm= (DefaultTableModel)inouttable.getModel();
            tm.setRowCount(0);
        for(int i=0;i<rawcontents.getRowCount();i++)
            if(rawcontents.getValueAt(i, 2).toString().toUpperCase().startsWith(search.getText().toUpperCase()))
                tm.addRow(new Object[]{rawcontents.getValueAt(i, 0),rawcontents.getValueAt(i, 1),rawcontents.getValueAt(i, 2),rawcontents.getValueAt(i, 3)});
        if(tm.getRowCount()==0)
            for(int i=0;i<rawcontents.getRowCount();i++)
            if(rawcontents.getValueAt(i, 2).toString().toUpperCase().contains(search.getText().toUpperCase()))
                tm.addRow(new Object[]{rawcontents.getValueAt(i, 0),rawcontents.getValueAt(i, 1),rawcontents.getValueAt(i, 2),rawcontents.getValueAt(i, 3)});
        summation();
    }
    private void fillrawtable()
    {
        try{
            SimpleDateFormat dtfrmat=new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat dtfrmatprt=new SimpleDateFormat("dd-MM-yyyy");
            DefaultTableModel tm= (DefaultTableModel)rawcontents.getModel();
            tm.setRowCount(0);
            
            String sql="SELECT [Date], Item_name, Rate, Quantity, Unit, Total FROM Item_List WHERE [Date] BETWEEN '" + dtfrmat.format(fromdate.getDate()) + "' AND '"+dtfrmat.format(todate.getDate())+"'";
            //System.out.println(dtfrmat.format(fromdate.getDate())+"   "+dtfrmat.format(todate.getDate()));
            if(showwhat.getSelectedItem().equals("All")||showwhat.getSelectedItem().equals("Output")){
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            //dtfrmat=new SimpleDateFormat("dd-MM-yyyy");
            while(rs.next())
            {
                Object[] row={"Output",dtfrmatprt.format(rs.getDate("Date")),rs.getString("Item_name")+" @"+Format(rs.getDouble("Rate")),Format(-rs.getDouble("Total"))};
                tm.addRow(row);
            }
            }
            //dtfrmat=new SimpleDateFormat("yyyy-MM-dd");
            if(showwhat.getSelectedItem().equals("All")||showwhat.getSelectedItem().equals("Input")){
            sql="SELECT [Date], Customer_name, Payment_mode, Txn_no, Amount_paid FROM Pay WHERE [Date] BETWEEN '" + dtfrmat.format(fromdate.getDate()) + "' AND '"+dtfrmat.format(todate.getDate())+"'";
            //System.out.println(dtfrmat.format(fromdate.getDate())+"   "+dtfrmat.format(todate.getDate()));
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            //dtfrmat=new SimpleDateFormat("dd-MM-yyyy");
            while(rs.next())
            {
                Object[] row={"Input",dtfrmatprt.format(rs.getDate("Date")),rs.getString("Customer_name")+" paid in "+rs.getString("Payment_mode")+" "+rs.getString("Txn_no"),Format(rs.getDouble("Amount_paid"))};
                tm.addRow(row);
            }}
            int rowcount=rawcontents.getRowCount();          
            for(int i=0;i<rowcount;)
            {
                Date first=dtfrmatprt.parse(rawcontents.getValueAt(i, 1).toString());
                int firstpos=i;
                for(int j=0;j<rowcount;j++){
                    if(first.after(dtfrmatprt.parse(rawcontents.getValueAt(j, 1).toString())))
                    {firstpos=j;
                     first=dtfrmatprt.parse(rawcontents.getValueAt(j, 1).toString());
                    }}
                
                tm.addRow(new Object[]{rawcontents.getValueAt(firstpos, 0),rawcontents.getValueAt(firstpos, 1),rawcontents.getValueAt(firstpos, 2),rawcontents.getValueAt(firstpos, 3)});
                tm.removeRow(firstpos);
                rowcount--;
            }
        }
        catch(Exception e)
        {   JOptionPane.showMessageDialog(null, e);}
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        fillrawtable();
        searchandfillup();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate
        // TODO add your handling code here:
        searchandfillup();
    }//GEN-LAST:event_searchCaretUpdate

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        fromdate.setEnabled(false);
        fromdate.setDate(dt);
        todate.setEnabled(false);
        todate.setDate(dt);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        fromdate.setEnabled(false);
        fromdate.setDate(new Date(dt.getYear(), dt.getMonth(), dt.getDate()-1));
        todate.setEnabled(false);
        todate.setDate(new Date(dt.getYear(), dt.getMonth(), dt.getDate()-1));
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        fromdate.setEnabled(true);
        fromdate.setDate(new Date(dt.getYear(), dt.getMonth()-1, dt.getDate()));
        todate.setEnabled(true);
        todate.setDate(dt);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        if(frames.remove(this))
            frames.add(this);
        else
            frames.add(this);
    }//GEN-LAST:event_formWindowGainedFocus

    private void inouttableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inouttableMouseReleased
        summation();
    }//GEN-LAST:event_inouttableMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputOutput().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser fromdate;
    private javax.swing.JTable inouttable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable rawcontents;
    private javax.swing.JTextField search;
    public javax.swing.JComboBox<String> showwhat;
    private com.toedter.calendar.JDateChooser todate;
    // End of variables declaration//GEN-END:variables
}
